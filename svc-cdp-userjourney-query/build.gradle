dependencies {
    implementation project(':app-commons')

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.8'

//    implementation 'org.apache.kafka:kafka-streams'
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '2.6.1'

    implementation 'io.confluent:kafka-avro-serializer'
    implementation 'io.confluent:kafka-streams-avro-serde'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-core'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // Avro
    implementation "io.confluent:kafka-streams-avro-serde:${confluentVersion}"
    implementation "io.confluent:kafka-avro-serializer:${confluentVersion}"
}

compileJava.dependsOn(processResources)

jib {
    // credentials should be set from outside like e.g.
    // 'gradle jib -Djib.to.auth.username=$DOCKER_USER -Djib.to.auth.password=$DOCKER_USER_PASSWORD'
    from {
        image = 'openjdk:11.0.11-jdk-slim'
    }
    to {
        image = "ippendigital/${rootProject.name}:${project.version}"
    }
}
